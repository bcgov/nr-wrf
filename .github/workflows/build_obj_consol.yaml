name: build-objconsolidator-image

# used on push for testing / development
on:
  push:

# on:
#   pull_request:
#     # debug: remove the dev,putting build action on non existent branches for debug
#     branches: ['master', 'main']
#     types: ['opened', 'reopened']
#     paths-ignore:
#       - .vscode/**
#       - .gitignore
#       - LICENSE
#       - readme.md
#       - code_of_conduct.md
# fix the paths ^^ to limit to the python directory changes

jobs:
  # This workflow contains a single job called "build"
  buildjob:
    defaults:
      run:
        shell: bash

    name: 'build obj consolidator script'
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    env:
      DEBUG_DEPLOY: false

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      if: env.DEBUG_DEPLOY == 'false'
      id: checkout
      with:
        fetch-depth: 0

    - name: calculate image tag
      id: calculateImageTag
      shell: bash
      run: |
        DATESTAMP=$(date +%Y%m%d-%H%M)
        echo datestamp is $DATESTAMP
        echo ::set-output name=DATESTAMP::${DATESTAMP}
    - name: Log in to GitHub Docker Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        #username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Push Client Docker Image
      uses: docker/build-push-action@v2
      with:
        push: true # Will only build if this is not here
        context: python-objstore
        file: consolicate_objstores.docker
        tags: |
          ghcr.io/${{ github.repository_owner }}/obj-consolidate:latest
          ghcr.io/${{ github.repository_owner }}/obj-consolidate:${{ steps.calculateImageTag.outputs.DATESTAMP }}

